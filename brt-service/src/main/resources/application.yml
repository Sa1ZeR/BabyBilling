
spring:
  application:
    name: brt-service

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        hbm2ddl:
          import_files:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
        format_sql: true
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:bootcamp24}
    username: ${POSTGRES_NAME:postgres}
    password: ${POSTGRES_PASSWORD:123456}

  kafka:
    topics:
      cdr-file-topic: 'cdr-file-topic'
      hrs-topic: 'hrs-topic'
      calculation-data-topic: 'calc-data-topic'
      crm-event-topic: 'crm-event-topic'
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      min-insync-replicas: 1
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: "all"
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092} #список серверов кластера
      cdr-generator-topic-name: "cdr-generator-topic"
      group-id: "cdr-group"
      trust-packages: "*"
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_HOST:http://localhost:3000/eureka}
  instance:
    instance-id: ${spring.application.name}:${random.value}

server:
  port: ${SERVER_PORT:3002}
